name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest release
        id: get_latest_release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
          tag_name=$(echo $latest_release | jq -r .tag_name)
          if [ "$tag_name" == "null" ]; then
            echo "v0.0.0" > latest_release.txt
          else
            echo $tag_name > latest_release.txt
          fi

      - name: Increment version
        id: increment_version
        run: |
          latest_release=$(cat latest_release.txt)
          IFS='.' read -r -a version_parts <<< "${latest_release#v}"
          new_patch_version=$((version_parts[2] + 1))
          new_version="v${version_parts[0]}.${version_parts[1]}.$new_patch_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Generate release notes
        id: generate_release_notes
        run: |
          commits=$(git log --pretty=format:"%h %s" $(git describe --tags --abbrev=0)..HEAD)
          echo "release_notes=$commits" >> $GITHUB_ENV

      - name: Create new release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.new_version }}
          release_name: "load-balancer-simulator ${{ env.new_version }}"
          body: ${{ env.release_notes }}
          draft: false
          prerelease: false